graph={
    'A': ['B'],
    'B': ['A', 'C'],
    'C': ['B'],
    'D': ['E'],
    'E': ['D'],
    'F': []
}

ccnum={'A':-1,'B':-1,'C':-1,'D':-1,'E':-1,'F':-1}

def components(G):
    cc=0
    for j in G:
        print(j)
        if ccnum[j]==-1:
            DFS(G,j,cc)
            cc+=1
            

def DFS(graph,v,cc):
    ccnum[v] = cc
    explore(graph,v)


def explore(graph,v):
    previsit(v)
    for u in graph[v]:
        if ccnum[u]==-1:
            ccnum[u]=ccnum[v]
            explore(graph,u)
        print(f"Vertex {v} is in component {ccnum[v]}")
    postvisit(v)

t=0
def previsit(v):
    global t
    t+=1
    #print(f"Entered vertex {v} at time {t}")

def postvisit(v):
    global t
    t += 1
    #print(f"Exited vertex {v} at time {t}")

components(graph)
